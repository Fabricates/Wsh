name: nightly-build

on:
  schedule:
    - cron: '0 0 * * *' # every night at 00:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22]
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          echo "Building for ${GOOS}/${GOARCH}"
          mkdir -p out
          outname=wsh
          if [ "${GOOS}" = "windows" ]; then outname=wsh.exe; fi
          go build -o out/${GOOS}-${GOARCH}/${outname} ./

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wsh-${{ matrix.os }}-${{ matrix.arch }}-go${{ matrix.go-version }}
          path: out/${{ matrix.os }}-${{ matrix.arch }}/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Create or update nightly release
        id: release
        uses: ncipollo/release-action@v1
        with:
          tag: nightly
          name: Nightly build (rolling)
          body: |
            Nightly rolling release - generated on $(date -u)
          draft: false
          prerelease: false
          overwrite: true

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: release-artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Notify
        run: echo "Nightly build completed"
