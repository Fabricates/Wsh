name: nightly-build

on:
  schedule:
    - cron: '0 0 * * *' # every night at 00:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - go-version: "1.22"
            os: linux
            arch: amd64
            runner: ubuntu-latest
          - go-version: "1.22"
            os: linux
            arch: arm64
            runner: ubuntu-latest
          - go-version: "1.22"
            os: windows
            arch: amd64
            runner: windows-latest
          - go-version: "1.22"
            os: darwin
            arch: amd64
            runner: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          echo "Building for ${GOOS}/${GOARCH}"
          mkdir -p out
          outname=wsh-${GOOS}-${GOARCH}
          go build -o out/${outname} ./

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wsh-${{ matrix.os }}-${{ matrix.arch }}-go${{ matrix.go-version }}
          path: out/wsh-${{ matrix.os }}-${{ matrix.arch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create or update nightly release
        id: release
        uses: ncipollo/release-action@v1
        with:
          tag: nightly
          name: Nightly build (rolling)
          body: |
            Nightly rolling release - generated on $(date -u)
          draft: false
          prerelease: true
          allowUpdates: true

      - name: Checkout repository to create tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create or update 'nightly' tag and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Point the nightly tag at the current HEAD and push
          git tag -f nightly HEAD
          git push --force origin refs/tags/nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./wsh-*/wsh-*
          tag_name: nightly
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Notify
        run: echo "Nightly build completed"
